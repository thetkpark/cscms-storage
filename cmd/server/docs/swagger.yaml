definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handlers.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.File:
    properties:
      created_at:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      encrypted:
        type: boolean
      expired_at:
        type: string
      file_size:
        type: integer
      file_type:
        type: string
      filename:
        type: string
      id:
        type: string
      nonce:
        type: string
      token:
        type: string
      updated_at:
        type: string
      userID:
        type: integer
      visited:
        type: integer
    type: object
  model.Image:
    properties:
      created_at:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      file_path:
        type: string
      file_size:
        type: integer
      id:
        type: integer
      original_filename:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: This is a sample server Petstore server.
  title: CSCMS Storage
  version: "1.0"
paths:
  /{token}:
    get:
      description: Access link to download the file
      parameters:
      - description: File Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Download the file
      tags:
      - File
  /api/file:
    get:
      description: List all the upload file by the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.File'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List of uploaded file
      tags:
      - File
    post:
      consumes:
      - multipart/form-data
      description: Upload new temporary store file
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Upload new file
      tags:
      - File
  /api/file/{fileID}:
    delete:
      description: Delete the active file by ID
      parameters:
      - description: File ID
        in: path
        name: fileID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete the file
      tags:
      - File
    patch:
      description: Edit the file token/slug
      parameters:
      - description: File ID
        in: path
        name: fileID
        required: true
        type: string
      - description: New file token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Edit file token
      tags:
      - File
  /api/image:
    get:
      description: List uploaded images from the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Image'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List uploaded images
      tags:
      - Image
    post:
      consumes:
      - multipart/form-data
      description: Upload new image
      parameters:
      - description: Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "413":
          description: Request Entity Too Large
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Upload new image
      tags:
      - Image
  /api/image/{imageID}:
    delete:
      description: Delete uploaded image from the user
      parameters:
      - description: Image ID
        in: path
        name: imageID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete image
      tags:
      - Image
swagger: "2.0"
